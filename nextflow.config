// NEXTFLOW MANIFEST
manifest {
    name                                  = 'umi-pipeline-nf'
    version                               = '0.1.0'
    description                           = 'Nextflow pipeline to analyze umi amplicon data'
    author                                = 'Stephan Amstler'
    homePage                              = 'https://github.com/AmstlerStephan/UMI_Pipeline_Nextflow'
    mainScript                            = 'main.nf'
    nextflowVersion                       = '!>=22.04.5.5708'
}

// DEFAULT PARAMETERS
params {

	// BASIC PARAMS
	help = true
	version = true
	debug = false
	
	// Required	
	
	// Input FASTQ files. Can be a (zipped) FASTQ file or a folder containing (zipped) FASTQ files
	input = data/example_egfr_single_cluster.fastq
	output = example_egfr_single_read_run
	reference = data/example_egfr_reference.fasta
	bed = data/example_egfr_amplicon.bed
	threads = (Runtime.runtime.availableProcessors() - 1)
	
	// Optional

	// Max differences between UMI in read and UMI pattern
	umi_errors = 3

	// Min number of reads required for a consensus read
	min_reads_per_cluster = 20

	// Max number of 1D used for a consensus read
	max_reads_per_cluster = 60

	// Min overlap with target region
	min_overlap = 0.90

	// Balance forward and reverse 1D reads in clusters
	balance_strands = True

	// Medaka model used to compute consensus reads
	medaka_model = "r941_min_high_g360"

	// Forward tail of primer (Ftail...UMI...primer)
	fwd_context = "GTATCGTGTAGAGACTGCGTAGG"

	// Reverse tail of primer (Rtail...UMI...primer)
	rev_context = "AGTGATCGAGTCAGTGCGAGTG"

	// Forward UMI (Ftail...UMI...primer)
	fwd_umi = "TTTVVVVTTVVVVTTVVVVTTVVVVTTT"

	// Reverse UMI (Rtail...UMI...primer)
	rev_umi = "AAABBBBAABBBBAABBBBAABBBBAAA"

	// Minimum combined UMI length
	min_length = 40

	// Maximum combined UMI length
	max_length = 60



}


// NEXTFLOW PROFILES
profiles {

	// -profile standard
	standard {
		includeConfig "${baseDir}/config/base.config"
	}

	// -profile conda
	conda {
		includeConfig "${baseDir}/config/base.config"
		process.conda = "$baseDir/env/environment.yml"
	}

	// -profile docker
	docker {
		includeConfig "${baseDir}/config/base.config"
		docker.enabled = true
		process.container = 'ecseq/dnaseq'
	}

	// -profile singularity
	singularity {
		includeConfig "${baseDir}/config/base.config"
		singularity.enabled = true
		process.container = 'ecseq/dnaseq'
	}

	// -profile test
	test {
		includeConfig "${baseDir}/config/base.config"
		includeConfig "${baseDir}/config/test.config"
	}

	// -profile custom
	custom {
		// Don't load any config (for use with custom home configs)
	}
}


// NEXTFLOW REPORTING # this defines pipeline metadata
dag {
	enabled = true
	file = "${params.output}/dag.svg"
}
report {
	enabled = true
	file = "${params.output}/report.html"
}
timeline {
	enabled = true
	file = "${params.output}/timeline.html"
}
trace {
	enabled = true
	file = "${params.output}/trace.txt"
}