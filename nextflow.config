// NEXTFLOW MANIFEST
manifest {
    name                                  = 'umi-pipeline-nf'
    version                               = '0.1.0'
    description                           = 'Nextflow pipeline to analyze umi amplicon data'
    author                                = 'Stephan Amstler'
    homePage                              = 'https://github.com/AmstlerStephan/UMI_Pipeline_Nextflow'
    mainScript                            = 'main.nf'
    nextflowVersion                       = '!>=22.04'
}

// DEFAULT PARAMETERS
params {

	// BASIC PARAMS
	help = false
	version = false
	debug = false
	
	// Required	
	
	// set to null and check in workflow or set default values?
	input = null
	output = "umi-pipeline-nf_results"
	reference = null
	bed = null
	
	// Optional
	threads = (Runtime.runtime.availableProcessors() - 1)

	umi_errors = 3

	min_reads_per_cluster = 20

	max_reads_per_cluster = 60

	min_overlap = 0.90

	balance_strands = true

	medaka_model = "r941_min_high_g360"

	fwd_universal_primer = "GTATCGTGTAGAGACTGCGTAGG"

	rev_universal_primer = "AGTGATCGAGTCAGTGCGAGTG"

	fwd_umi = "TTTVVVVTTVVVVTTVVVVTTVVVVTTT"

	rev_umi = "AAABBBBAABBBBAABBBBAABBBBAAA"

	min_length = 40

	max_length = 60

	minimap2_param = "-ax map-ont -k 13"


}


// NEXTFLOW PROFILES
profiles {

	// -profile standard
	standard {
		includeConfig "${baseDir}/config/base.config"
	}

	// -profile conda
	conda {
		includeConfig "${baseDir}/config/base.config"
		process.conda = "${baseDir}/env/environment.yml"
	}

	// -profile docker
	docker {
		includeConfig "${baseDir}/config/base.config"
		docker.enabled = true
		process.container = 'umi-pipeline-nf:latest'
	}

	// -profile singularity
	singularity {
		includeConfig "${baseDir}/config/base.config"
		singularity.enabled = true
		process.container = 'umi-pipeline-nf.sif'
	}

	// -profile test
	test {
		includeConfig "${baseDir}/config/base.config"
		includeConfig "${baseDir}/config/test.config"
	}
}


// NEXTFLOW REPORTING # this defines pipeline metadata
dag {
	enabled = true
	file = "${params.output}/dag.svg"
}
report {
	enabled = true
	file = "${params.output}/report.html"
}
timeline {
	enabled = true
	file = "${params.output}/timeline.html"
}
trace {
	enabled = true
	file = "${params.output}/trace.txt"
}